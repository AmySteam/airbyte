"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[225],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(r),d=o,y=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return r?n.createElement(y,a(a({ref:t},l),{},{components:r})):n.createElement(y,a({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},99726:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={},s="Sentry Integration",u={unversionedId:"operator-guides/sentry-integration",id:"operator-guides/sentry-integration",title:"Sentry Integration",description:"Airbyte provides an opportunity to aggregate connectors' exceptions and errors via Sentry.",source:"@site/../docs/operator-guides/sentry-integration.md",sourceDirName:"operator-guides",slug:"/operator-guides/sentry-integration",permalink:"/operator-guides/sentry-integration",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/operator-guides/sentry-integration.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Configuring Airbyte",permalink:"/operator-guides/configuring-airbyte"},next:{title:"Using custom connectors",permalink:"/operator-guides/using-custom-connectors"}},l={},p=[{value:"UML diagram",id:"uml-diagram",level:2}],f={toc:p};function d(e){var t=e.components,c=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,c,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sentry-integration"},"Sentry Integration"),(0,i.kt)("p",null,"Airbyte provides an opportunity to aggregate connectors' exceptions and errors via ",(0,i.kt)("a",{parentName:"p",href:"https://https://sentry.io/"},"Sentry"),".\nBy default, this option is off. There are 2 possible mechanisms for its activation:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Define the ",(0,i.kt)("inlineCode",{parentName:"li"},"SENTRY_DSN")," environment variable into Dockerfile of necessary connectors."),(0,i.kt)("li",{parentName:"ol"},"Define the ",(0,i.kt)("inlineCode",{parentName:"li"},"SENTRY_DSN")," into the workspace environment file (",(0,i.kt)("inlineCode",{parentName:"li"},".env"),"). Workers will add this variable to all docker connectors automatically.")),(0,i.kt)("p",null,"Most connectors written using the Airbyte Python or Java CDKs automatically detect this environment variable and activate Sentry profiling accordingly. "),(0,i.kt)("h2",{id:"uml-diagram"},"UML diagram"),(0,i.kt)("p",null,(0,i.kt)("img",{src:r(69933).Z,width:"772",height:"1058"})))}d.isMDXComponent=!0},69933:function(e,t,r){t.Z=r.p+"assets/images/sentry-flow-v1-77f21deba3ed04428ca87d49c965ad8a.png"}}]);