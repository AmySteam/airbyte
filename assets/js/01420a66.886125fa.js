"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[1489],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},21752:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),l=["components"],i={},s="Introduction",p={unversionedId:"gradle-dependency-update",id:"gradle-dependency-update",title:"Introduction",description:"This document describes how to update dependency versions for Airbyte's Gradle build and how to share them with other projects.",source:"@site/../docs/gradle-dependency-update.md",sourceDirName:".",slug:"/gradle-dependency-update",permalink:"/gradle-dependency-update",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/gradle-dependency-update.md",tags:[],version:"current",frontMatter:{}},c={},u=[{value:"The version catalog TOML file format",id:"the-version-catalog-toml-file-format",level:4},{value:"Declaring a version catalog",id:"declaring-a-version-catalog",level:4},{value:"Sharing Catalogs",id:"sharing-catalogs",level:4},{value:"Configure the Plugin Publishing Plugin",id:"configure-the-plugin-publishing-plugin",level:4}],m={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This document describes how to update dependency versions for Airbyte's ",(0,a.kt)("strong",{parentName:"p"},"Gradle")," build and how to share them with other ",(0,a.kt)("strong",{parentName:"p"},"projects"),".",(0,a.kt)("br",{parentName:"p"}),"\n","Dependencies should be represented as dependency coordinates, that a user can pick from when declaring dependencies in a build script."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Version Catalog Example:"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencies {\n   implementation(libs.groovy.core)\n}\n")),(0,a.kt)("p",{parentName:"blockquote"},"In this context, libs is a catalog and groovy represents a dependency available in this catalog.")),(0,a.kt)("h4",{id:"the-version-catalog-toml-file-format"},"The version catalog TOML file format"),(0,a.kt)("p",null,"Gradle offers a conventional file to declare a catalog.",(0,a.kt)("br",{parentName:"p"}),"\n","It\u2019s a conventional location to declare dependencies that are both consumed and published."),(0,a.kt)("p",null,"The TOML file consists of 4 major sections:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the ","[versions]"," section is used to declare versions which can be referenced by dependencies"),(0,a.kt)("li",{parentName:"ul"},"the ","[libraries]"," section is used to declare the aliases to coordinates"),(0,a.kt)("li",{parentName:"ul"},"the ","[bundles]"," section is used to declare dependency bundles"),(0,a.kt)("li",{parentName:"ul"},"the ","[plugins]"," section is used to declare plugins")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"TOML file Example:"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},'[versions]\ngroovy = "3.0.5"\n\n[libraries]\ngroovy-core = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }\n\n[bundles]\ngroovy = ["groovy-core", "groovy-json", "groovy-nio"]\n\n[plugins]\njmh = { id = "me.champeau.jmh", version = "0.6.5" }\n')),(0,a.kt)("p",{parentName:"blockquote"},"NOTE: for more information please follow ",(0,a.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/platforms.html#:~:text=The%20version%20catalog%20TOML%20file%20format"},"this")," link.")),(0,a.kt)("p",null,"As described above this project contains TOML file ",(0,a.kt)("inlineCode",{parentName:"p"},"deps.toml")," which is fully fulfilled with respect to ",(0,a.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format"},"official")," documentation.\nIn case when new versions should be used please update ",(0,a.kt)("inlineCode",{parentName:"p"},"deps.toml")," accordingly."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"deps.toml"),(0,a.kt)("p",null,"[versions]",(0,a.kt)("br",{parentName:"p"}),"\n",'fasterxml_version = "2.13.0"',(0,a.kt)("br",{parentName:"p"}),"\n",'glassfish_version = "2.31"',(0,a.kt)("br",{parentName:"p"}),"\n",'commons_io = "2.7"',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j = "2.17.1"',(0,a.kt)("br",{parentName:"p"}),"\n",'slf4j = "1.7.30"',(0,a.kt)("br",{parentName:"p"}),"\n",'lombok = "1.18.22"',(0,a.kt)("br",{parentName:"p"}),"\n",'junit-jupiter = "5.7.2"'),(0,a.kt)("p",null,"[libraries]",'\nfasterxml = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "fasterxml_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'glassfish = { module = "org.glassfish.jersey:jackson-bom", version.ref = "glassfish_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "fasterxml_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "fasterxml_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jackson-dataformat = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "fasterxml_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jackson-datatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "fasterxml_version" }',(0,a.kt)("br",{parentName:"p"}),"\n",'guava = { module = "com.google.guava:guava", version = "30.1.1-jre" }',(0,a.kt)("br",{parentName:"p"}),"\n",'commons-io = { module = "commons-io:commons-io", version.ref = "commons_io" }',(0,a.kt)("br",{parentName:"p"}),"\n",'apache-commons = { module = "org.apache.commons:commons-compress", version = "1.20" }',(0,a.kt)("br",{parentName:"p"}),"\n",'apache-commons-lang = { module = "org.apache.commons:commons-lang3", version = "3.11" }',(0,a.kt)("br",{parentName:"p"}),"\n",'slf4j-api = { module = "org.slf4j:slf4j-api", version = "1.7.30" }',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j-web = { module = "org.apache.logging.log4j:log4j-web", version.ref = "log4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }',(0,a.kt)("br",{parentName:"p"}),"\n",'appender-log4j2 = { module = "com.therealvan:appender-log4j2", version = "3.6.0" }',(0,a.kt)("br",{parentName:"p"}),"\n",'aws-java-sdk-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version = "1.12.6" }',(0,a.kt)("br",{parentName:"p"}),"\n",'google-cloud-storage = { module = "com.google.cloud:google-cloud-storage", version = "2.2.2" }',(0,a.kt)("br",{parentName:"p"}),"\n",'s3 = { module = "software.amazon.awssdk:s3", version = "2.16.84" }',(0,a.kt)("br",{parentName:"p"}),"\n",'lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }',(0,a.kt)("br",{parentName:"p"}),"\n",'junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }',(0,a.kt)("br",{parentName:"p"}),"\n",'junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }',(0,a.kt)("br",{parentName:"p"}),"\n",'junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }',(0,a.kt)("br",{parentName:"p"}),"\n",'mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version = "4.0.0" }',(0,a.kt)("br",{parentName:"p"}),"\n",'assertj-core = { module = "org.assertj:assertj-core", version = "3.21.0" }',(0,a.kt)("br",{parentName:"p"}),"\n",'junit-pioneer = { module = "org.junit-pioneer:junit-pioneer", version = "1.6.2" }',(0,a.kt)("br",{parentName:"p"}),"\n",'findsecbugs-plugin = { module = "com.h3xstream.findsecbugs:findsecbugs-plugin", version = "1.11.0" }'),(0,a.kt)("p",null,"[bundles]",(0,a.kt)("br",{parentName:"p"}),"\n","jackson = ",'["jackson-databind", "jackson-annotations", "jackson-dataformat", "jackson-datatype"]',(0,a.kt)("br",{parentName:"p"}),"\n","apache = ",'["apache-commons", "apache-commons-lang"]',(0,a.kt)("br",{parentName:"p"}),"\n","log4j = ",'["log4j-api", "log4j-core", "log4j-impl", "log4j-web"]',(0,a.kt)("br",{parentName:"p"}),"\n","slf4j = ",'["jul-to-slf4j", "jcl-over-slf4j", "log4j-over-slf4j"]',(0,a.kt)("br",{parentName:"p"}),"\n","junit = ",'["junit-jupiter-api", "junit-jupiter-params", "mockito-junit-jupiter"]')),(0,a.kt)("h4",{id:"declaring-a-version-catalog"},"Declaring a version catalog"),(0,a.kt)("p",null,"Version catalogs can be declared in the settings.gradle file.",(0,a.kt)("br",{parentName:"p"}),"\n","There should be specified section ",(0,a.kt)("inlineCode",{parentName:"p"},"dependencyResolutionManagement")," which uses ",(0,a.kt)("inlineCode",{parentName:"p"},"deps.toml")," file as a declared catalog."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example:"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencyResolutionManagement {\n    repositories {\n        maven {\n            url 'https://airbyte.mycloudrepo.io/public/repositories/airbyte-public-jars/'\n       }\n    }\n    versionCatalogs {\n        libs {\n            from(files(\"deps.toml\"))\n        }\n    }\n}\n"))),(0,a.kt)("h4",{id:"sharing-catalogs"},"Sharing Catalogs"),(0,a.kt)("p",null,"To share catalog for further usage by other Projects need to do 2 steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Define ",(0,a.kt)("inlineCode",{parentName:"li"},"version-catalog")," plugin in ",(0,a.kt)("inlineCode",{parentName:"li"},"build.gradle")," file (ignore if this record exists)",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},"plugins {\n    id '...'\n    id 'version-catalog'\n"))),(0,a.kt)("li",{parentName:"ul"},"Prepare Catalog for Publishing",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},'catalog {\n    versionCatalog {\n        from(files("deps.toml")) < --- declere either dependencies or specify existing TOML file\n    }\n}\n')))),(0,a.kt)("h4",{id:"configure-the-plugin-publishing-plugin"},"Configure the Plugin Publishing Plugin"),(0,a.kt)("p",null,"For ",(0,a.kt)("strong",{parentName:"p"},"Publishing")," need to define ",(0,a.kt)("inlineCode",{parentName:"p"},"maven-publish")," plugin in ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle")," file (ignore if this record exists):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},"plugins {\n    id '...'\n    id 'maven-publish'\n}\n")),(0,a.kt)("p",null,"Further on need to describe publishing section. Please use ",(0,a.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/publishing_gradle_plugins.html"},"this")," official documentation for more details."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example:"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},"publishing {\n    publications {\n        maven(MavenPublication) {\n            groupId = 'io.airbyte'\n            artifactId = 'oss-catalog'\n\n                from components.versionCatalog\n        }\n    }\n\n    repositories {\n        maven {\n            url 'https://airbyte.mycloudrepo.io/repositories/airbyte-public-jars'\n            credentials {\n                name 'cloudrepo'\n                username System.getenv('CLOUDREPO_USER')\n                password System.getenv('CLOUDREPO_PASSWORD')\n            }\n        }\n\n        mavenLocal()\n    }\n}\n"))))}d.isMDXComponent=!0}}]);