"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[3864],{3905:function(e,t,i){i.d(t,{Zo:function(){return u},kt:function(){return p}});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=d(i),p=r,f=m["".concat(s,".").concat(p)]||m[p]||c[p]||a;return i?n.createElement(f,o(o({ref:t},u),{},{components:i})):n.createElement(f,o({ref:t},u))}));function p(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},70346:function(e,t,i){i.r(t),i.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var n=i(87462),r=i(63366),a=(i(67294),i(3905)),o=["components"],l={},s="AirbyteCatalog Reference",d={unversionedId:"understanding-airbyte/catalog",id:"understanding-airbyte/catalog",title:"AirbyteCatalog Reference",description:"Overview",source:"@site/../docs/understanding-airbyte/catalog.md",sourceDirName:"understanding-airbyte",slug:"/understanding-airbyte/catalog",permalink:"/understanding-airbyte/catalog",editUrl:"https://github.com/airbytehq/airbyte/docs/../docs/understanding-airbyte/catalog.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"A Beginner's Guide to the AirbyteCatalog",permalink:"/understanding-airbyte/beginners-guide-to-catalog"},next:{title:"Airbyte Specification",permalink:"/understanding-airbyte/airbyte-specification"}},u={},c=[{value:"Overview",id:"overview",level:2},{value:"Cursor",id:"cursor",level:2},{value:"AirbyteStream",id:"airbytestream",level:2},{value:"ConfiguredAirbyteStream",id:"configuredairbytestream",level:2},{value:"Logic for resolving the Cursor Field",id:"logic-for-resolving-the-cursor-field",level:2}],m={toc:c};function p(e){var t=e.components,i=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"airbytecatalog-reference"},"AirbyteCatalog Reference"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"An ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteCatalog")," is a struct that is produced by the ",(0,a.kt)("inlineCode",{parentName:"p"},"discover")," action of a source. It is a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteStream"),"s. Each ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteStream")," describes the data available to be synced from the source. After a source produces an ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteCatalog")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteStream"),", they should be treated as read only. A ",(0,a.kt)("inlineCode",{parentName:"p"},"ConfiguredAirbyteCatalog")," is a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"ConfiguredAirbyteStream"),"s. Each ",(0,a.kt)("inlineCode",{parentName:"p"},"ConfiguredAirbyteStream")," describes how to sync an ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteStream"),"."),(0,a.kt)("h2",{id:"cursor"},"Cursor"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The cursor is how sources track which records are new or updated since the last sync. "),(0,a.kt)("li",{parentName:"ul"},'A "cursor field" is the field that is used as a comparable for making this determinations.',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If a configuration requires a cursor field, it requires an array of strings that serves as a path to the desired field. e.g. if the structure of a stream is ",(0,a.kt)("inlineCode",{parentName:"li"},"{ value: 2, metadata: { updated_at: 2020-11-01 } }")," the ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field")," might be ",(0,a.kt)("inlineCode",{parentName:"li"},'["metadata", "updated_at"]'),".")))),(0,a.kt)("h2",{id:"airbytestream"},"AirbyteStream"),(0,a.kt)("p",null,"This section will document the meaning of each field in an ",(0,a.kt)("inlineCode",{parentName:"p"},"AirbyteStream")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"json_schema")," - This field contains a ",(0,a.kt)("a",{parentName:"li",href:"https://json-schema.org/understanding-json-schema"},"JsonSchema")," representation of the schema of the stream."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"supported_sync_modes")," - The sync modes that the stream supports. By default, all sources support ",(0,a.kt)("inlineCode",{parentName:"li"},"FULL_REFRESH"),". Even if this array is empty, it can be assumed that a source supports ",(0,a.kt)("inlineCode",{parentName:"li"},"FULL_REFRESH"),". The allowed sync modes are ",(0,a.kt)("inlineCode",{parentName:"li"},"FULL_REFRESH")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"INCREMENTAL"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"source_defined_cursor")," - If a source supports the ",(0,a.kt)("inlineCode",{parentName:"li"},"INCREMENTAL")," sync mode, and it sets this field to true, it is responsible for determining internally how it tracks which records in a source are new or updated since the last sync. When set to ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field")," should also be set."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field")," - If a source supports the ",(0,a.kt)("inlineCode",{parentName:"li"},"INCREMENTAL")," sync mode, it may, optionally, set this field. If this field is set, and the user does not override it with the ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," attribute in the ",(0,a.kt)("inlineCode",{parentName:"li"},"ConfiguredAirbyteStream")," ","(","described below",")",", this field will be used as the cursor. It is an array of keys to a field in the schema.")),(0,a.kt)("h2",{id:"configuredairbytestream"},"ConfiguredAirbyteStream"),(0,a.kt)("p",null,"This section will document the meaning of each field in an ",(0,a.kt)("inlineCode",{parentName:"p"},"ConfiguredAirbyteStream")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"stream")," - This field contains the ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," that it is configured."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sync_mode")," - The sync mode that will be used to sync that stream. The value in this field MUST be present in the ",(0,a.kt)("inlineCode",{parentName:"li"},"supported_sync_modes")," array for the discovered ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," of this stream."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," - This field is an array of keys to a field in the schema that in the ",(0,a.kt)("inlineCode",{parentName:"li"},"INCREMENTAL")," sync mode will be used to determine if a record is new or updated since the last sync.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If an ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," has ",(0,a.kt)("inlineCode",{parentName:"li"},"source_defined_cursor")," set to ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", then the ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," attribute in ",(0,a.kt)("inlineCode",{parentName:"li"},"ConfiguredAirbyteStream")," will be ignored."),(0,a.kt)("li",{parentName:"ul"},"If an ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," defines a ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field"),", then the ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," attribute in ",(0,a.kt)("inlineCode",{parentName:"li"},"ConfiguredAirbyteStream")," is not required, but if it is set, it will override the default value."),(0,a.kt)("li",{parentName:"ul"},"If an ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," does not define a ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," or a ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field"),", then ",(0,a.kt)("inlineCode",{parentName:"li"},"ConfiguredAirbyteStream")," must define a ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field"),".")))),(0,a.kt)("h2",{id:"logic-for-resolving-the-cursor-field"},"Logic for resolving the Cursor Field"),(0,a.kt)("p",null,"This section lays out how a cursor field is determined in the case of a Stream that is doing an ",(0,a.kt)("inlineCode",{parentName:"p"},"incremental")," sync."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If ",(0,a.kt)("inlineCode",{parentName:"li"},"source_defined_cursor")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," is true, then the source determines the cursor field internally. It cannot be overriden. If it is false, continue..."),(0,a.kt)("li",{parentName:"ul"},"If ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"ConfiguredAirbyteStream")," is set, then the source uses that field as the cursor. If it is not set, continue..."),(0,a.kt)("li",{parentName:"ul"},"If ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"AirbyteStream")," is set, then the sources use that field as the cursor. If it is not set, continue..."),(0,a.kt)("li",{parentName:"ul"},"Illegal - If ",(0,a.kt)("inlineCode",{parentName:"li"},"source_defined_cursor"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"cursor_field"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"default_cursor_field")," are all falsey, this is an invalid configuration.")))}p.isMDXComponent=!0}}]);